---
layout: single
title: "面向对象设计模式的六大原则"
modified:
categories: Technology OOP
description: 我们生活在一个充满规则的世界里，在复杂多变的外表下，万事万物都被永恒的真理支配并有规律的运行着。模式也是一样，不论那种模式，其背后都潜藏着一些“永恒的真理”，这个真理就是设计原则。
date: 2015-04-21T04:13:38+00:00
---

我们生活在一个充满规则的世界里，在复杂多变的外表下，万事万物都被永恒的真理支配并有规律的运行着。模式也是一样，不论那种模式，其背后都潜藏着一些“永恒的真理”，这个真理就是设计原则。

##设计模式的原则##

1. 单一职责原则
就一个类而言，应该仅有一个引起它变化的原因。如果一个类承担的职责过多，就等于把这些职责耦合在一起，一个职责的变化可能会消弱或抑制这个类完成其它职责的能力。这种耦合会导致脆弱的设计,当变化发生时，设计会遭受到意想不到的破坏。

2. 开放-封闭原则
指软件实体（类，模块，函数等等）应该可以扩展，但是不可以修改。即对于扩展开放，而对于修改封闭。

3. 依赖倒转原则
高层模块不应该依赖低层模块，两个都应该依赖抽象。抽像不应该依赖于细节，细节应该依赖抽象。要针对接口编程，不要针对实现编程。

4. 里氏代换原则
子类型必须能够替换掉他们的父类型。即一个软件实体如果使用的是一个父类的话，那么一定适用于其子类，而且它察觉不出父类对象和子类对象的区别，也就是说，在软件里面，把父类都替换成它的子类，程序的行为没有发生变化。

5. 迪米特法则
如果两个类不必彼此直接通信，那么这二个类就不应当发生直接的相互作用。如果其中一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。首先强调的前提是在类的结构设计上，每一个类都应该尽量降低成员的访问权限。强调了类之间的松耦合。

6. 合成/聚合复用原则
优先使用对象合成/聚合，而不是类继承。
聚合：表示一种弱的"拥有"关系，体现的是A对象可以包含B对象，但B对象不是A对象的一部分。如大雁和雁群的关系。
合成：表示一种强的"拥有"关系，体现了严格的部分和整体的关系，部分和整体的生命周期一样。如大雁和翅膀的关系。
